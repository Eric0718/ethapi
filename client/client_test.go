package client

import (
	"encoding/hex"
	"fmt"
	"log"
	"testing"
)

func TestSendSignedTransaction(t *testing.T) {
	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")
	from := "0x4790B510972A9826Ebc54592cF6d4C680Ae61A67"
	to := "0x6EDe43322872D37c6B578AC490109feCd4a7A528"
	pri := "2XM9Roy8Grg4vSr8PJ5ufgYCoKL9eV4V8VdevGv6ufAnEkezzyBzzjUa4UHsWhMXLh2g2wRyrUagggkZWkrm2bzh"
	amount := 500000
	s, err := cli.SendTransaction(from, to, pri, uint64(amount))
	if err != nil {
		t.Error(err)
		return
	}
	t.Log(s)
}

func TestGetBlockNumber(t *testing.T) {
	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")

	height, err := cli.GetBlockNumber()
	if err != nil {
		t.Error(err)
		return
	}
	t.Logf("height = %v\n", height)
}

func TestGetBalance(t *testing.T) {
	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")
	from := "0x4790B510972A9826Ebc54592cF6d4C680Ae61A67"
	banl, err := cli.GetBalance(from)
	if err != nil {
		t.Error(err)
		return
	}
	t.Logf("balance = %v\n", banl)
}

func TestGetBlockByHash(t *testing.T) {
	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")
	hash := "KtoGtNKGkYTZmLo22ngPj7ZNz7Ufi1ktRFo6S64aZb7nMc5"

	b, err := cli.GetBlockByHash(hash)
	if err != nil {
		t.Error(err)
		return
	}
	t.Logf("block: %v\n", b)
}

func TestGetBlockByNumber(t *testing.T) {
	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")
	var num uint64 = 2403730
	b, err := cli.GetBlockByNumber(num)
	if err != nil {
		t.Error(err)
		return
	}
	t.Logf("block: %v\n", b)
}

func TestGetTransactionByHash(t *testing.T) {
	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")
	hash := "d9aa743f6cf8dbdd220dd9fcab0cebf18f001ce5381168f60bf27d411edccbe4"

	tx, err := cli.GetTransactionByHash(hash)
	if err != nil {
		t.Error(err)
		return
	}
	log.Println("===========")
	log.Println(hex.EncodeToString(tx.Hash), "0x"+fmt.Sprintf("%X", tx.BlockNumber))
	log.Println("++++++++++++")

}

func TestContractCreate(t *testing.T) {
	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")

	addr, err := cli.ContractCreate("608060405234801561001057600080fd5b50600860ff16600a0a633b9aca0002600181905550600860ff16600a0a633b9aca00026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16738e6ea506b6e4c770a5df3e4d1886ae60d216bb2c73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600860ff16600a0a633b9aca00026040518082815260200191505060405180910390a36112228061010a6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636618846311610071578063661884631461028857806370a08231146102ee57806395d89b4114610346578063a9059cbb146103c9578063d73dd6231461042f578063dd62ed3e14610495576100b4565b806306fdde03146100b9578063095ea7b31461013c57806318160ddd146101a257806323b872dd146101c05780632ff2e9dc14610246578063313ce56714610264575b600080fd5b6100c161050d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101886004803603604081101561015257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610546565b604051808215151515815260200191505060405180910390f35b6101aa610638565b6040518082815260200191505060405180910390f35b61022c600480360360608110156101d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610642565b604051808215151515815260200191505060405180910390f35b61024e6109f6565b6040518082815260200191505060405180910390f35b61026c610a07565b604051808260ff1660ff16815260200191505060405180910390f35b6102d46004803603604081101561029e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a0c565b604051808215151515815260200191505060405180910390f35b6103306004803603602081101561030457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c9d565b6040518082815260200191505060405180910390f35b61034e610ce5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561038e578082015181840152602081019050610373565b50505050905090810190601f1680156103bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610415600480360360408110156103df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d1e565b604051808215151515815260200191505060405180910390f35b61047b6004803603604081101561044557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f39565b604051808215151515815260200191505060405180910390f35b6104f7600480360360408110156104ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611135565b6040518082815260200191505060405180910390f35b6040518060400160405280601081526020017f666569796920746f6b656e20636f696e0000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561067d57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156106c857600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561075157600080fd5b6107a2826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111bc90919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610835826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d390919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061090682600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111bc90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600860ff16600a0a633b9aca000281565b600881565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610b1d576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bb1565b610b3083826111bc90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060400160405280600481526020017f465954430000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d5957600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610da457600080fd5b610df5826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111bc90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e88826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d390919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610fca82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d390919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211156111c857fe5b818303905092915050565b60008183019050828110156111e457fe5b8090509291505056fea265627a7a72315820616f72583f8050f60afced1212c55d820d5674f1e2d4d0de032af2c6d50e807364736f6c634300050b0032", "0xf978BB6c574b355E327ADb27321dCd81455BFf90")
	if err != nil {
		t.Error(err)
		return
	}
	t.Logf("TestContractCreate OK,contract address:%v\n", addr)
	return
}

func TestContractCall(t *testing.T) {
	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")
	ret, err := cli.ContractCall("", "0xA947a3FdCA6cDb7E907f3d727d605439cd1E2EBA", "70a08231000000000000000000000000678593e9b62b22be0b04588aa92f7d9d6370f999")
	if err != nil {
		t.Error(err)
		return
	}
	t.Logf("TestContractCall OK,result:%v\n", ret)
}

func TestSendRawTransaction(t *testing.T) {
	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")
	var raw = "0xf86909808307a1209460a17ef1b8b22e89cd6d19bccd275863d98f209187038d7ea4c68000808240dea0204cf7e7ae2eb918e3bd22371fb29a3126655d07afdc0105289aad6ddc61b5fea07c5ff81f8f29c847cb8f7d4e950d2f91fb79745d512118d7105bb31f10d36774"
	h, err := cli.SendRawTransaction(raw)
	if err != nil {
		t.Error(err)
		return
	}

	t.Logf("TestSendRawTransaction OK,result:%v\n", h)
}

func TestGetCode(t *testing.T) {

	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")

	code, err := cli.GetCode("0x403148bd4835646bcb6da18cf41d2b50391099b8")
	if err != nil {
		t.Error(err)
		return
	}
	t.Logf("GetCode OK,result:%v\n", code)
}

func TestGetNonce(t *testing.T) {
	cli := New("106.12.186.114:6001", "0x60a17Ef1B8b22e89cd6d19bcCD275863d98F2091")
	n, err := cli.GetNonce("0xd8aE0197425C0eA651264b06978580DcB62f3c91")
	if err != nil {
		t.Error(err)
		return
	}
	t.Logf("GetCode OK,0xd8aE0197425C0eA651264b06978580DcB62f3c91 nonce:%v\n", n)
}
